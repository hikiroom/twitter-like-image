/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["TwitterLikeImage"] = factory();
	else
		root["TwitterLikeImage"] = factory();
})(this, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ts/style.ts":
/*!*************************!*\
  !*** ./src/ts/style.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.style = void 0;\nexports.style = {\n    '.twitter-like-image': {\n        width: '100%',\n        borderRadius: '20px',\n        position: 'relative',\n        overflow: 'hidden',\n    },\n    '.twitter-like-image.is-transitionend .backdrop-content': {\n        transition: '0.4s cubic-bezier(0.33, 0.98, 0.77, 0.98)',\n    },\n    '.twitter-like-image::before': {\n        content: \"''\",\n        display: 'block',\n        width: '100%',\n        paddingTop: '50%',\n    },\n    '.content': {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gridTemplateRows: '1fr 1fr',\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        left: '0',\n        top: '0',\n        gridGap: '4px',\n        listStyle: 'none',\n        margin: '0',\n        padding: '0',\n    },\n    '.item': {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n    },\n    '.item:nth-last-child(1)': {\n        gridColumn: '1/3',\n        gridRow: '1/3',\n    },\n    '.item:nth-last-child(2)': {\n        gridColumn: '1',\n        gridRow: '1/3',\n    },\n    '.item:nth-last-child(2) + .item': {\n        gridColumn: '2',\n        gridRow: '1/3',\n    },\n    '.item:nth-last-child(3)': {\n        gridColumn: '1',\n        gridRow: '1',\n    },\n    '.item:nth-last-child(3) + .item': {\n        gridColumn: '1',\n        gridRow: '2',\n    },\n    '.item:nth-last-child(3) + .item + .item': {\n        gridColumn: '2',\n        gridRow: '1/3',\n    },\n    '.item:nth-last-child(4)': {\n        gridColumn: '1/2',\n        gridRow: '1/2',\n    },\n    '.item:nth-last-child(4) + .item': {\n        gridColumn: '2/3',\n        gridRow: '1/2',\n    },\n    '.item:nth-last-child(4) + .item + .item': {\n        gridColumn: '1/2',\n        gridRow: '2/3',\n    },\n    '.item:nth-last-child(4) + .item + .item + .item': {\n        gridColumn: '2/3',\n        gridRow: '2/3',\n    },\n    '.item img': {\n        width: '100%',\n        height: '100%',\n        display: 'block',\n        objectFit: 'cover',\n    },\n    '.backdrop': {\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        background: 'rgba(0, 0, 0, 0.7)',\n        transition: 'opacity 0.2s, visibility 0.2s',\n        position: 'fixed',\n        top: '0',\n        left: '0',\n        zIndex: 100,\n    },\n    '.backdrop.is-hide': {\n        opacity: '0',\n        visibility: 'hidden',\n    },\n    '.backdrop-content': {\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        listStyle: 'none',\n        margin: '0',\n        padding: '0',\n    },\n    '.backdrop-item': {\n        display: 'flex',\n        height: '100%',\n        minWidth: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        overflow: 'hidden',\n    },\n    '.backdrop-item img': {\n        width: '100%',\n        height: '100%',\n        objectFit: 'contain',\n    },\n    '.backdrop-caption': {\n        minHeight: '80px',\n        width: '100%',\n        background: 'rgba(0, 0, 0, 0.5)',\n        position: 'absolute',\n        bottom: '0',\n        left: '0',\n        padding: '10px 15px',\n        color: 'white',\n        boxSizing: 'border-box',\n        margin: '0',\n    },\n    '.backdrop-next,.backdrop-prev': {\n        display: 'flex',\n        alignItems: 'center',\n        height: '100%',\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        position: 'absolute',\n        top: '0',\n        border: '0',\n        background: 'transparent',\n        overflow: 'hidden',\n    },\n    '.backdrop-next.is-hide,.backdrop-prev.is-hide': {\n        display: 'block',\n    },\n    '.backdrop-next:focus,.backdrop-prev:focus': {\n        outline: 'none',\n    },\n    '.backdrop-next:focus::before,.backdrop-prev:focus::before': {\n        border: '2px solid rgba(255, 255, 255, 0.4)',\n    },\n    '.backdrop-next:hover::before,.backdrop-prev:hover::before': {\n        background: 'rgba(255, 255, 255, 0.1)',\n    },\n    '.backdrop-next::before,.backdrop-prev::before': {\n        content: \"''\",\n        display: 'block',\n        width: '38px',\n        height: '38px',\n        borderRadius: '50%',\n        background: 'rgba(0, 0, 0, 0.1)',\n        transition: '0.3s',\n        border: '2px solid transparent',\n    },\n    '.backdrop-next::after,.backdrop-prev::after': {\n        content: \"''\",\n        display: 'block',\n        width: '8px',\n        height: '8px',\n        position: 'absolute',\n        top: 'calc(50% - 5px)',\n    },\n    '.backdrop-prev': {\n        left: '0',\n    },\n    '.backdrop-prev::after': {\n        borderLeft: '2px solid rgba(255, 255, 255, 0.6)',\n        borderTop: '2px solid rgba(255, 255, 255, 0.6)',\n        transform: 'rotate(-45deg)',\n        right: 'calc(50% - 6px)',\n    },\n    '.backdrop-next': {\n        right: '0',\n    },\n    '.backdrop-next::after': {\n        borderTop: '2px solid rgba(255, 255, 255, 0.6)',\n        borderRight: '2px solid rgba(255, 255, 255, 0.6)',\n        transform: 'rotate(45deg)',\n        left: 'calc(50% - 6px)',\n    },\n    '.backdrop-close': {\n        display: 'block',\n        width: '38px',\n        height: '38px',\n        borderRadius: '50%',\n        background: 'rgba(0, 0, 0, 0.1)',\n        position: 'absolute',\n        overflow: 'hidden',\n        top: '20px',\n        left: '10px',\n        transition: '0.3s',\n        border: '2px solid transparent',\n    },\n    '.backdrop-close:hover': {\n        background: 'rgba(255, 255, 255, 0.1)',\n    },\n    '.backdrop-close:focus': {\n        outline: 'none',\n        border: '2px solid rgba(255, 255, 255, 0.4)',\n    },\n    '.backdrop-close::before,.backdrop-close::after': {\n        content: \"''\",\n        display: 'block',\n        width: '16px',\n        height: '2px',\n        background: 'rgba(255, 255, 255, 0.6)',\n        position: 'absolute',\n        top: 'calc(50% - 1px)',\n        left: 'calc(50% - 8px)',\n    },\n    '.backdrop-close::before': {\n        transform: 'rotate(45deg)',\n    },\n    '.backdrop-close::after': {\n        transform: 'rotate(-45deg)',\n    },\n};\n\n\n//# sourceURL=webpack://TwitterLikeImage/./src/ts/style.ts?");

/***/ }),

/***/ "./src/ts/twitterLikeImage.ts":
/*!************************************!*\
  !*** ./src/ts/twitterLikeImage.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst style_1 = __webpack_require__(/*! ./style */ \"./src/ts/style.ts\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/ts/utils.ts\");\nclass TwitterLikeImage extends HTMLElement {\n    constructor() {\n        super();\n        this.init = false;\n        this.content = null;\n        this.backdrop = null;\n        this.backdropContent = null;\n        this.backdropCaption = null;\n        this.backdropPrev = null;\n        this.backdropNext = null;\n        this.backdropClose = null;\n        this.items = null;\n        this.srcArr = [];\n        this.altArr = [];\n        this.activeItemIdx = -1;\n        this.attachShadow({ mode: 'open' });\n        this.appendTemplateToShadowDom();\n    }\n    connectedCallback() {\n        if (!this.init) {\n            this.init = true;\n            this.setElementsToThis();\n            this.appendItemElements();\n            this.setEventOfBackdropElements();\n            this.closeBackDrop();\n        }\n    }\n    /**\n     * shadowDOMに要素のテンプレートを追加する\n     */\n    appendTemplateToShadowDom() {\n        var _a;\n        const template = document.createElement('template');\n        template.innerHTML = `\n            <div class=\"twitter-like-image\">\n            <ul class=\"content\"></ul>\n            <div class=\"backdrop\">\n            <ul class=\"backdrop-content\"></ul>\n            <p class=\"backdrop-caption\"></p>\n            <button class=\"backdrop-prev\" aria-label=\"previous\"></button>\n            <button class=\"backdrop-next\" aria-label=\"next\"></button>\n            <button class=\"backdrop-close\" aria-label=\"close\"></button>\n            </div>\n            </div>\n        `;\n        const instance = template.content.cloneNode(true);\n        const styleElement = utils_1.styleStringToStyleElement(utils_1.styleObjectToStyleString(style_1.style));\n        (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.append(instance, styleElement);\n    }\n    /**\n     * 各種要素をthisに格納する\n     */\n    setElementsToThis() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const srcArr = this.getHostAttrArr('src');\n        const altArr = this.getHostAttrArr('alt');\n        const content = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.content');\n        const backdrop = (_b = this.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector('.backdrop');\n        const backdropContent = (_c = this.shadowRoot) === null || _c === void 0 ? void 0 : _c.querySelector('.backdrop-content');\n        const backdropCaption = (_d = this.shadowRoot) === null || _d === void 0 ? void 0 : _d.querySelector('.backdrop-caption');\n        const backdropPrev = (_e = this.shadowRoot) === null || _e === void 0 ? void 0 : _e.querySelector('.backdrop-prev');\n        const backdropNext = (_f = this.shadowRoot) === null || _f === void 0 ? void 0 : _f.querySelector('.backdrop-next');\n        const backdropClose = (_g = this.shadowRoot) === null || _g === void 0 ? void 0 : _g.querySelector('.backdrop-close');\n        if (!backdrop || !content || !backdropContent || !backdropCaption || !backdropPrev || !backdropNext || !backdropClose) {\n            throw new Error('structure elements do not exist.');\n        }\n        this.altArr = altArr;\n        this.srcArr = srcArr;\n        this.content = content;\n        this.backdrop = backdrop;\n        this.backdropContent = backdropContent;\n        this.backdropCaption = backdropCaption;\n        this.backdropPrev = backdropPrev;\n        this.backdropNext = backdropNext;\n        this.backdropClose = backdropClose;\n    }\n    /**\n     * item要素をcontent（backdrop含む）要素に追加する\n     */\n    appendItemElements() {\n        const { content, backdropContent, srcArr, altArr } = this;\n        if (!content || !backdropContent) {\n            throw new Error('Either content or backdrop-content does not exist.');\n        }\n        srcArr.forEach((src, i) => {\n            var _a, _b;\n            const contentImg = utils_1.createElement('img', { src, alt: (_a = altArr[i]) !== null && _a !== void 0 ? _a : '' });\n            const item = utils_1.createElement('li', { class: 'item' }, [contentImg]);\n            item.addEventListener('click', this.openBackDrop.bind(this, i));\n            content.append(item);\n            const backdropImg = utils_1.createElement('img', { src, alt: (_b = altArr[i]) !== null && _b !== void 0 ? _b : '' });\n            const backdropContentItem = utils_1.createElement('li', { class: 'backdrop-item' }, [backdropImg]);\n            backdropContent.append(backdropContentItem);\n        });\n    }\n    setEventOfBackdropElements() {\n        const { backdrop, backdropPrev, backdropNext, backdropClose, activeItemIdx } = this;\n        if (!backdrop || !backdropPrev || !backdropNext || !backdropClose) {\n            throw new Error('');\n        }\n        backdropPrev.addEventListener('click', this.switchTargetImage.bind(this, activeItemIdx + 1));\n        backdropNext.addEventListener('click', this.switchTargetImage.bind(this, activeItemIdx - 1));\n        backdropClose.addEventListener('click', this.closeBackDrop.bind(this));\n    }\n    /**\n     * hostの属性を取得し、配列として返す\n     * @param attrName\n     */\n    getHostAttrArr(attrName) {\n        var _a, _b;\n        const attrArr = (_b = (_a = this.shadowRoot) === null || _a === void 0 ? void 0 : _a.host.getAttribute(attrName)) === null || _b === void 0 ? void 0 : _b.replace(/\\s/g, '').split(',');\n        if (!attrArr || attrArr.length < 1 || attrArr.length > 4) {\n            throw new Error(`Something is wrong of ${attrName} attribute.`);\n        }\n        return attrArr;\n    }\n    openBackDrop(itemIdx) {\n        const { backdrop } = this;\n        if (!backdrop) {\n            throw new Error('');\n        }\n        this.activeItemIdx = itemIdx;\n        backdrop.classList.remove('is-hide');\n        this.setCaption(this.altArr[itemIdx]);\n    }\n    switchTargetImage() {\n    }\n    closeBackDrop() {\n        const { backdrop } = this;\n        if (!backdrop) {\n            throw new Error('');\n        }\n        backdrop.classList.add('is-hide');\n        this.activeItemIdx = -1;\n    }\n    setCaption(caption) {\n        const { backdropCaption } = this;\n        if (!backdropCaption) {\n            throw new Error('');\n        }\n        backdropCaption.innerText = caption;\n    }\n}\ncustomElements.define('tl-img', TwitterLikeImage);\n\n\n//# sourceURL=webpack://TwitterLikeImage/./src/ts/twitterLikeImage.ts?");

/***/ }),

/***/ "./src/ts/utils.ts":
/*!*************************!*\
  !*** ./src/ts/utils.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createElement = exports.lowerCamelCaseToKebabCase = exports.styleStringToStyleElement = exports.styleObjectToStyleString = void 0;\n/**\n * styleObjectを元に、styleStringを生成する\n * @param styleObject\n */\nconst styleObjectToStyleString = (styleObject) => {\n    let styleString = '';\n    for (const [selector, valueObject] of Object.entries(styleObject)) {\n        styleString += `${selector} {`;\n        for (const [property, value] of Object.entries(valueObject)) {\n            styleString += `${exports.lowerCamelCaseToKebabCase(property)}: ${value};`;\n        }\n        styleString += `}`;\n    }\n    return styleString;\n};\nexports.styleObjectToStyleString = styleObjectToStyleString;\n/**\n * styleStringを元に、styleElementを生成する\n * @param styleString\n */\nconst styleStringToStyleElement = (styleString) => {\n    const styleElement = document.createElement('style');\n    styleElement.insertAdjacentText('beforeend', styleString);\n    return styleElement;\n};\nexports.styleStringToStyleElement = styleStringToStyleElement;\n/**\n * 文字列をローワーキャメルケースからケバブケースに変換する\n * @param string 変換したい文字列\n */\nconst lowerCamelCaseToKebabCase = (string) => {\n    return string.replace(/(?!=[A-Z]|^.)([A-Z])/g, (targetString) => {\n        return `-${targetString.charAt(0).toLowerCase()}`;\n    });\n};\nexports.lowerCamelCaseToKebabCase = lowerCamelCaseToKebabCase;\n/**\n * 任意のHTMLElementを生成する\n * @param tagName\n * @param attrObject\n * @param [children[]]\n * @returns\n */\nconst createElement = (tagName, attrObject, children) => {\n    const el = document.createElement(tagName);\n    for (const [key, value] of Object.entries(attrObject)) {\n        el.setAttribute(key, value);\n    }\n    if (children && children.length > 0) {\n        children.forEach((element) => {\n            el.append(element);\n        });\n    }\n    return el;\n};\nexports.createElement = createElement;\n\n\n//# sourceURL=webpack://TwitterLikeImage/./src/ts/utils.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/ts/twitterLikeImage.ts");
/******/ 	__webpack_exports__ = __webpack_exports__.default;
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});